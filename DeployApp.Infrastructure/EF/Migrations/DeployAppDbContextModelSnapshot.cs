// <auto-generated />
using System;
using DeployApp.Infrastructure.EF.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeployApp.Infrastructure.EF.Migrations
{
    [DbContext(typeof(DeployAppDbContext))]
    partial class DeployAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeployApp.Domain.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_011")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description_011")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_011")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("group_011", (string)null);
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Instance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_004")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key_004")
                        .HasColumnOrder(3);

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("id_001_004")
                        .HasColumnOrder(1);

                    b.Property<int?>("ProjectVersionId")
                        .HasColumnType("integer")
                        .HasColumnName("id_002_actual_004")
                        .HasColumnOrder(5);

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("secret_004")
                        .HasColumnOrder(4);

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("id_003_004")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("ProjectVersionId")
                        .IsUnique();

                    b.HasIndex("TypeId")
                        .IsUnique();

                    b.ToTable("instance_004", (string)null);
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.InstanceGroup", b =>
                {
                    b.Property<int>("InstanceId")
                        .HasColumnType("integer")
                        .HasColumnName("id_004_006")
                        .HasColumnOrder(0);

                    b.Property<int>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("id_011_006")
                        .HasColumnOrder(1);

                    b.HasKey("InstanceId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("instance_group_006", (string)null);
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.InstanceTag", b =>
                {
                    b.Property<int>("InstanceId")
                        .HasColumnType("integer")
                        .HasColumnName("id_004_005")
                        .HasColumnOrder(0);

                    b.Property<int>("TagId")
                        .HasColumnType("integer")
                        .HasColumnName("id_010_005")
                        .HasColumnOrder(1);

                    b.HasKey("InstanceId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("instance_tag_005", (string)null);
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_001")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description_001")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active_001")
                        .HasColumnOrder(3);

                    b.Property<string>("RepositoryUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("repository_url_001")
                        .HasColumnOrder(5);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title_001")
                        .HasColumnOrder(1);

                    b.Property<string>("YtCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("yt_code_001")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.ToTable("project_001", (string)null);
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.ProjectVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_002")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description_002")
                        .HasColumnOrder(5);

                    b.Property<int>("Major")
                        .HasColumnType("integer")
                        .HasColumnName("major_002")
                        .HasColumnOrder(2);

                    b.Property<int>("Minor")
                        .HasColumnType("integer")
                        .HasColumnName("minor_002")
                        .HasColumnOrder(3);

                    b.Property<int>("Patch")
                        .HasColumnType("integer")
                        .HasColumnName("patch_002")
                        .HasColumnOrder(4);

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("id_001_002")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("project_version_002", (string)null);
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_010")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description_010")
                        .HasColumnOrder(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name_010")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tag_010", (string)null);
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_003")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description_003")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("instance_type_003", (string)null);
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Instance", b =>
                {
                    b.HasOne("DeployApp.Domain.Entities.Project", "Project")
                        .WithMany("Instances")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DeployApp.Domain.Entities.ProjectVersion", "ProjectVersion")
                        .WithOne()
                        .HasForeignKey("DeployApp.Domain.Entities.Instance", "ProjectVersionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DeployApp.Domain.Entities.Type", "Type")
                        .WithOne("Instance")
                        .HasForeignKey("DeployApp.Domain.Entities.Instance", "TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("ProjectVersion");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.InstanceGroup", b =>
                {
                    b.HasOne("DeployApp.Domain.Entities.Group", "Group")
                        .WithMany("InstanceGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeployApp.Domain.Entities.Instance", "Instance")
                        .WithMany("InstanceGroups")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.InstanceTag", b =>
                {
                    b.HasOne("DeployApp.Domain.Entities.Instance", "Instance")
                        .WithMany("InstanceTags")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeployApp.Domain.Entities.Tag", "Tag")
                        .WithMany("InstanceTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.ProjectVersion", b =>
                {
                    b.HasOne("DeployApp.Domain.Entities.Project", "Project")
                        .WithMany("ProjectVersions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Group", b =>
                {
                    b.Navigation("InstanceGroups");
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Instance", b =>
                {
                    b.Navigation("InstanceGroups");

                    b.Navigation("InstanceTags");
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Project", b =>
                {
                    b.Navigation("Instances");

                    b.Navigation("ProjectVersions");
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Tag", b =>
                {
                    b.Navigation("InstanceTags");
                });

            modelBuilder.Entity("DeployApp.Domain.Entities.Type", b =>
                {
                    b.Navigation("Instance");
                });
#pragma warning restore 612, 618
        }
    }
}
